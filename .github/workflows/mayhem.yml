name: Mayhem
on:
  push:
  pull_request:
  workflow_dispatch:
  workflow_call:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DOCKERFILE: mayhem/Dockerfile
  MAYHEM_DIR: mayhem

jobs:
  # From https://brunoscheufler.com/blog/2021-10-09-generating-dynamic-github-actions-workflows-with-the-job-matrix-strategy
  make-matrix:
    name: Get list of mayhemfiles
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.mayhemfiles }}
    steps:
      - uses: actions/checkout@v3
      - id: set-matrix
        run: |
          files=$(cd ${{ env.MAYHEM_DIR }} && ls -1 *.mayhemfile | jq -Rsc '. / "\n" - [""]')
          echo "Mayhemfiles: $files"
          echo "mayhemfiles=$files" >> $GITHUB_OUTPUT
  build:
    name: '${{ matrix.os }} shared=${{ matrix.shared }} ${{ matrix.build_type }}'
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        shared: [false]
        build_type: [Release]
        include:
          - os: ubuntu-latest
            triplet: x64-linux

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Log in to the Container registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4.1.1
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3.2.0
        with:
          context: .
          push: true
          file: ${{ env.DOCKERFILE }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

    outputs:
      image: ${{ steps.meta.outputs.tags }}

  mayhem:
    needs: [build, make-matrix]
    name: 'fuzz ${{ matrix.target }}'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target: ${{ fromJSON(needs.make-matrix.outputs.matrix) }}

    steps:
      - uses: actions/checkout@v3

      - name: Start analysis for ${{ matrix.target }}
        uses: ForAllSecure/mcode-action@v1
        with:
          mayhem-token: ${{ secrets.MAYHEM_TOKEN }}
          args: --image ${{ needs.build.outputs.image }} --file ${{ env.MAYHEM_DIR }}/${{ matrix.target }} --duration 300
          sarif-output: sarif
      - name: Upload SARIF file(s) as artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}.sarif
          path: sarif

  sarif:
    name: Collect and upload SARIF file(s)
    runs-on: ubuntu-latest
    needs: mayhem
    steps:
      - name: Download SARIF artifacts
        uses: actions/download-artifact@v3
        with:
          path: sarif
      - name: Upload SARIF file(s)
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: sarif
